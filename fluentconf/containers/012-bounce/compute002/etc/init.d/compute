#!/usr/bin/env bash

#
# An init.d script for running a Node.js process as a service using Forever as
# the process monitor. For more configuration options associated with Forever,
# see: https://github.com/nodejitsu/forever
#
# This was written for Debian distributions such as Ubuntu, but should still
# work on RedHat, Fedora, or other RPM-based distributions, since none of the
# built-in service functions are used.

NAME="Fluent Compute Service"
NODE_BIN_DIR="/usr/local/node/bin"
NODE_PATH="/usr/local/lib/node_modules"
APPLICATION_PATH="/opt/fluent/index.js"
PIDFILE="/var/run/compute.pid"
LOGFILE="/var/log/fluent/compute.log"

# Forever settings to prevent the application spinning if it fails on launch.
MIN_UPTIME="5000"
SPIN_SLEEP_TIME="2000"

PATH=$NODE_BIN_DIR:$PATH

# Export all environment variables that must be visible for the Node.js
# application process forked by Forever. It will not see any of the other
# variables defined in this script.
export NODE_PATH=$NODE_PATH

start() {
    echo "Starting $NAME"

    forever \
        --pidFile $PIDFILE \
        -a \
        -l $LOGFILE \
        --minUptime $MIN_UPTIME \
        --spinSleepTime $SPIN_SLEEP_TIME \
        start $APPLICATION_PATH 2>&1 > /dev/null &
        RETVAL=$?
}

stop() {
    if [ -f $PIDFILE ]; then
        echo "Shutting down $NAME"

        # Tell Forever to stop the process.
        forever stop $APPLICATION_PATH 2>&1 > /dev/null

        # Get rid of the pidfile, since Forever won't do that.
        rm -f $PIDFILE

        RETVAL=$?
    else
        echo "$NAME is not running."

        RETVAL=0
    fi
}

restart() {
    stop
    start
}

status() {
    echo `forever list` | grep -q "$APPLICATION_PATH"

    if [ "$?" -eq "0" ]; then
        echo "$NAME is running."

        RETVAL=0
    else
        echo "$NAME is not running."

        RETVAL=3
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        restart
        ;;
    *)
        echo "Usage: {start|stop|status|restart}"
        exit 1
        ;;
esac

exit $RETVAL
